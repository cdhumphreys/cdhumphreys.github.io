---
// TODO: Update this to use Collection
import { getCollection } from "astro:content";
import ProjectCard from "../components/ProjectCard.astro";

const projectEntries = await getCollection("projects");
---

<section id="work" class="js-workSection work container section">
    <header class="work__header section__header">
        <h2 class="work__title section__title">Work</h2>
        <div class="work__description section__description">
            <p>
                These are some of the sites Iâ€™ve worked on in my current role of
                front-end developer at Pixelbuilders; alongside a talented team
                of designers, back-end developers & project managers to create
                some great projects.
            </p>
        </div>
    </header>
    <div class="work__grid">
        {
            projectEntries.map(async (entry, idx) => {
                const { Content } = await entry.render();
                return (
                    <ProjectCard
                        style={`--i: ${idx}`}
                        img={entry.data.img}
                        href={entry.data.href}
                        title={entry.data.title}
                        tags={entry.data.tags}
                        alt={entry.data.alt}
                    >
                        <Content />
                    </ProjectCard>
                );
            })
        }
    </div>
</section>

<style>
    .work {
        position: relative;
    }

    .work__grid {
        padding-inline: var(--spacing-10);
        display: grid;
        grid-template-columns: minmax(0, 1fr);

        grid-column: grid;
        gap: var(--spacing-60);

        @media screen and (min-width: 1024px) {
            padding-inline: var(--spacing-20);

            grid-template-columns: repeat(2, minmax(0, 1fr));
        }
    }
</style>

<script>
    import { animate, scroll } from "motion";

    const projectCards =
        document.querySelectorAll<HTMLElement>(".js-projectCard");

    const sectionLength = 1 / projectCards.length;
    projectCards.forEach(function (card, i) {
        const image = card.querySelector(".project-card__image")!;

        scroll(
            animate(image, {
                transform: ["translateY(-25%)", "translateY(25%)"],
            }),
            {
                offset: [
                    [sectionLength * i, 1],
                    [sectionLength * (i + 1), 0],
                ],
                target: card,
            },
        );
    });
</script>
