---
import { Picture } from "astro:assets";
import ProjectCard from "../components/ProjectCard.astro";

import barcodegenieImage from "../images/projects/barcodegenie.jpg";
import leadtechImage from "../images/projects/leadtech.jpg";
import plasmorImage from "../images/projects/plasmor.jpg";
import tagImage from "../images/projects/tag.jpg";
---

<section id="work" class="work container">
    <div class="work__inner">
        <header class="work__header">
            <h2 class="work__title">Work</h2>
            <div class="work__description">
                <p>
                    These are some of the sites Iâ€™ve worked on in my current
                    role of front-end developer at Pixelbuilders; alongside a
                    talented team of designers, back-end developers & project
                    managers to create some great projects.
                </p>
            </div>
        </header>
        <div class="work__grid">
            <ProjectCard
                style="--i: 0"
                img={tagImage}
                href="https://www.theaccessgroup.com/en-gb/"
                title="The Access Group"
                tags={["CSS Variables", "Design System", "Typescript"]}
                alt="Screenshot of the TAG website"
            >
                <p>
                    A large scale project running across multiple brands, this
                    was a great use case for design systems, requiring close
                    work with the design team to ensure it was maintainable
                    across the different brands
                </p>
            </ProjectCard>
            <ProjectCard
                style="--i: 1"
                img={barcodegenieImage}
                href="https://www.barcodegenie.co.uk/"
                title="Barcode Genie"
                tags={["Astro", "CI/CD", "Azure", "SSG", "React"]}
                alt="Screenshot of the Barcode Genie website"
            >
                <p>
                    Built with a Headless CMS, Astro, React & deployed to Azure
                    via a CI/CD pipeline this was a full-stack project utilising
                    some cloud solutions to host the CMS and static site
                    separately. Thanks to the static content being generated at
                    build time the load times are incredibly fast
                </p>
            </ProjectCard>
            <ProjectCard
                style="--i: 2"
                img={leadtechImage}
                href="https://www.lead-tech.co.uk/"
                title="Leadtech"
                tags={[
                    "CSS Variables",
                    "Design System",
                    "Theming",
                    "Animations",
                ]}
                alt="Screenshot of the Leadtech website"
            >
                <p>
                    Leadtech needed to be a very flexible site in theme and
                    widgets as it spanned a number of microsites from the same
                    codebase. The animations with the coloured pills throughout
                    the site were a lot of fun to work on
                </p>
            </ProjectCard>
            <ProjectCard
                style="--i: 3"
                img={plasmorImage}
                href="https://www.plasmor.co.uk/"
                title="Plasmor"
                tags={["Micro-interactions"]}
                alt="Screenshot of the TAG website"
            >
                <p>
                    A site for building materials with a great contrast of
                    colours with the dark theme. Lots of small
                    micro-interactions and animations to liven up the site.
                </p>
            </ProjectCard>
        </div>
    </div>
</section>

<style>
    .work {
        padding-block: var(--section-vertical-padding);

        position: relative;

        &::before {
            content: "";

            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: -1;

            background-image: radial-gradient(
                    circle at 100% 40%,
                    var(--colour-primary),
                    transparent 50%
                ),
                radial-gradient(circle at 100% 40%, white, transparent 50%);
            filter: blur(100px);
            background-position: center, center;

            background-repeat: no-repeat;
            background-size: 80vw auto;
            opacity: 0.3;

            @media screen and (min-width: 1024px) {
                background-size: contain;
                background-image: radial-gradient(
                        circle at 100% 0%,
                        var(--colour-primary),
                        transparent 50%
                    ),
                    radial-gradient(circle at 100% 0%, white, transparent 50%);
            }
        }

        &::after {
            content: "";

            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: -1;

            background-image: radial-gradient(
                    circle at 0% 80%,
                    var(--colour-primary),
                    transparent 50%
                ),
                radial-gradient(circle at 0% 80%, white, transparent 50%);
            filter: blur(100px);
            background-position:
                bottom left,
                bottom left;
            background-repeat: no-repeat;
            background-size: 100% 100%;
            opacity: 0.3;

            @media screen and (min-width: 1024px) {
                background-size: 25vw 25vw;
                background-image: radial-gradient(
                        circle at 0% 50%,
                        var(--colour-primary),
                        transparent 50%
                    ),
                    radial-gradient(circle at 0% 50%, white, transparent 50%);
            }
        }
    }

    .work__inner {
        display: flex;
        flex-direction: column;
        gap: var(--spacing-60);

        @media screen and (min-width: 1024px) {
            gap: var(--spacing-80);
        }
    }

    .work__header {
        display: flex;
        flex-direction: column;
        gap: var(--spacing-20);
    }

    .work__title {
        font-size: var(--fs-title);
    }

    .work__description {
        max-width: 60ch;
    }

    .work__grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(min(100%, 340px), 1fr));
        gap: var(--spacing-30);

        @media screen and (min-width: 1024px) {
            grid-template-columns: repeat(2, minmax(0, 1fr));

            gap: var(--spacing-40);
        }
    }
</style>

<script>
    import { inViewObs } from "../utils";

    const workSection = document.querySelector<HTMLElement>("#work");
    if (workSection) {
        inViewObs(workSection, () => {
            workSection.classList.add("in-view");
        });
    }
</script>
